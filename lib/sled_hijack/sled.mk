SLED_MK_DIR :=$(MKF_DIR)

# gfx lib
INCLUDE_DIRS = . sled/src
SOURCES_DIRS = .

#SRCS += $(SLED_MK_DIR)/sled/src/timers.c

SLED_SRCS = mathey.c random.c color.c graphics.c modules/text.c

IGNORED_SLED_MODULES = gfx_candyswarm.c gfx_golc.c gfx_ip.c gfx_testmatrix.c gfx_ursuppe2.c gfx_sort1D_algos.c
 
IGNORED_SLED_MODULES := $(addprefix $(SLED_MK_DIR)/sled/src/modules/,$(IGNORED_SLED_MODULES))
SLED_MODS_ORIG  = $(filter-out $(IGNORED_SLED_MODULES),$(wildcard $(SLED_MK_DIR)/sled/src/modules/gfx_*c))
SLED_MODS_FILES = $(subst $(SLED_MK_DIR)/sled/src/modules/,,$(SLED_MODS_ORIG))
SLED_MODS_NAMES = $(subst .c,,$(SLED_MODS_FILES))
SLED_MODS_LOCAL = $(addprefix $(SLED_MK_DIR)/modules/,$(SLED_MODS_FILES))

#$(foreach SRC,$(sort $(SLED_MODS_LOCAL)),$(info $(SRC)))
#$(error lol)

#$(error SLED_DIR:$(SLED_MK_DIR))
SLED_MODS_C =$(SLED_MK_DIR)/modules/sled_modules.c
SLED_MODS_H =$(SLED_MK_DIR)/modules/sled_modules.h
SLED_MODS_H_PATHS =../lib/sled_hijack/./modules/sled_modules.h
SLED_MODS_H_PATHS+=../lib/sled_hijack/modules/../modules/sled_modules.h

#$(SLED_MODS_LOCAL)
.DUMMY: $(SLED_MODS_H) $(SLED_MODS_C)
#SAVE_LIST =	$(if $(1),$(file >>$(1), $(wordlist 1,4,$(2)))  $(call SAVE_LIST,$(wordlist 5,$(words $1),$1)))

$(SLED_MODS_H) $(SLED_MODS_C) $(SLED_MODS_H_PATHS): $(SLED_MODS_ORIG) $(SLED_MODS_LOCAL)
	@echo "  CREATING $(subst $(TOP_DIR_REAL)/,,$(realpath $(@)))"
	@mkdir $(if $(Q),,-v) -p $(SLED_MK_DIR)/modules;
	@# h
	$(file  >$(SLED_MODS_H),/* Autogenerated */)
	$(file >>$(SLED_MODS_H),#ifndef SLED_MODULES_H)
	$(file >>$(SLED_MODS_H),#define SLED_MODULES_H)
	$(file >>$(SLED_MODS_H),#include "../sled.h")
	$(file >>$(SLED_MODS_H),#define SLED_MODULE_COUNT $(words $(SLED_MODS_NAMES)))
	$(file >>$(SLED_MODS_H),extern module_t *sled_modules[];)
	$(file >>$(SLED_MODS_H),#endif /* SLED_MODULES_H */)
	@# c
	$(file  >$(SLED_MODS_C),/* Autogenerated */)
	$(file >>$(SLED_MODS_C),#include "sled_modules.h")
	$(foreach NAME,$(SLED_MODS_NAMES),$(file >>$(SLED_MODS_C),extern module_t $(NAME);))
	$(file >>$(SLED_MODS_C),module_t *sled_modules[] = {)
	$(foreach NAME,&$(subst $(SPACE),$(COMMA) &,$(strip $(SLED_MODS_NAMES))),$(file >>$(SLED_MODS_C),		$(NAME)))
	$(file >>$(SLED_MODS_C),	};)

define SLED_MODULE_BODY =
static int init_(uint32_t modno) {
	return init(modno, NULL);
}
static void reset_(uint32_t modno) {
	reset(modno);
}
static int draw_(uint32_t modno) {
	return draw(modno, 0, NULL);
}
static void deinit_(uint32_t modno) {
	deinit(modno);
}
endef
	
$(SLED_MK_DIR)/modules/%.c : $(SLED_MK_DIR)/sled/src/modules/%.c
	@echo "  CREATING $@ << $<";
#	@echo "  CREATING $(subst $(TOP_DIR_REAL)/,,$(realpath $(@)))"
	@mkdir $(if $(Q),,-v) -p $(SLED_MK_DIR)/modules
	$(file  >$@,#include "../sled_gfx_private.h")
	$(file >>$@,#include "../sled/src/modules/$(*).c")
#	$(file  >$@,#include "../sled_gfx_object.h")
	$(file >>$@,$(SLED_MODULE_BODY))
	$(file >>$@,module_t $(*) = { .init = init_, .reset = reset_, .draw = draw_, .deinit = deinit_ };)

#DEPS += $(SLED_MODS_H)
SRCS += $(SLED_MODS_C) $(SLED_MODS_LOCAL) $(addprefix $(SLED_MK_DIR)/sled/src/,$(SLED_SRCS))
FILES_TO_CLEAN += $(SLED_MODS_H) $(SLED_MODS_C) $(SLED_MODS_LOCAL)

#$(foreach SRC,$(sort $(SRCS)),$(info $(SRC)))
#$(error lol)

